openapi: 3.0.0
info:
  title: Avito.tech Internship Backend 2022
  description: >-
    Microservice for working with the balance of users.
  contact:
    email: dev@pershin-daniil.ru
  version: 0.0.1
externalDocs:
  description: GitHub
  url: https://github.com/pershin-daniil/internship_backend_2022
servers:
  - url: https://localhost:8080/api/v1
paths:
  /addFunds:
    post:
      tags:
        - methods
      summary: The method of adding funds to the balance. Takes the user id, transaction uuid and how much money to add.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addFundsRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/walletResponse'
        410:
          description: Gone. Transaction already has been made.
  /reserveFunds:
    post:
      tags:
        - methods
      summary: The method of reserving funds from the main balance in a separate account.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reservedFundsRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eventsBodyResponse'
  /recognizeRevenue:
    post:
      tags:
        - methods
      summary: Revenue recognition method - writes off money from the reserve, adds data to the report for accounting.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/recognizeRevenueRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eventsBodyResponse'
  /getUserBalance:
    get:
      tags:
        - methods
      summary: The method of obtaining a user's balance.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/balanceRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/walletResponse'

components:
  schemas:
    balanceRequest:
      type: object
      properties:
        userID:
          type: integer
          format: int
          example: 1
    addFundsRequest:
      type: object
      properties:
        transactionID:
          type: string
          format: uuid
          example: 8333d1d6-57bd-415b-8668-97c4612a772d
        userID:
          type: integer
          format: int
          example: 10
        balance:
          type: integer
          format: int
          example: 100
    walletResponse:
      type: object
      properties:
        id:
          type: integer
          format: int
          example: 3
        userID:
          type: integer
          format: int
          example: 10
        balance:
          type: integer
          format: int
          example: 100
        reserved:
          type: integer
          format: int
          example: 10
        updatedAt:
          type: string
          format: 'date-time'
          example: '2023-03-27T12:07:33.352266+03:00'
    reservedFundsRequest:
      type: object
      properties:
        transactionID:
          type: string
          format: uuid
          example: 8333d1d6-57bd-415b-8668-97c4612a772d
        walletID:
          type: integer
          format: int
          example: 1
        serviceID:
          type: integer
          format: int
          example: 1
        orderID:
          type: integer
          format: int
          example: 1
        price:
          type: integer
          format: int
          example: 100
    recognizeRevenueRequest:
      type: object
      properties:
        transactionID:
          type: string
          format: uuid
          example: 8333d1d6-57bd-415b-8668-97c4612a772d
        walletID:
          type: integer
          format: int
          example: 1
        serviceID:
          type: integer
          format: int
          example: 1
        orderID:
          type: integer
          format: int
          example: 1
        status:
          type: string
          example: DONE
    eventsBodyResponse:
      type: object
      properties:
        id:
          type: integer
          format: int
          example: 1
        walletID:
          type: integer
          format: int
          example: 1
        serviceID:
          type: integer
          format: int
          example: 1
        orderID:
          type: integer
          format: int
          example: 1
        price:
          type: integer
          format: int
          example: 100
        status:
          type: string
          example: "DONE"
        updatedAt:
          type: string
          format: 'date-time'
          example: '2023-03-27T12:07:33.352266+03:00'